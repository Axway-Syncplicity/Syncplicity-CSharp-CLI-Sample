<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <appSettings>
    <!-- 
     ###################################
     ##           Endpoints           ##
     ###################################
     -->
    <add key="golUrl"  value="https://gol.syncplicity.com"/>

    <!-- 
     ###################################
     ##        OAuth settings         ##
     ###################################

     Create an app from devportal developer.syncplicity.com
     and then use that Key and secret here.
     1. REPLACE_WITH_APP_KEY
     2. REPLACE_WITH_APP_SECRET
     -->
    <add key="appKey" value="REPLACE_WITH_APP_KEY" />
    <add key="appSecret" value="REPLACE_WITH_APP_SECRET" />

    <!--
      Set REPLACE_WITH_ADMIN_TOKEN to the admin token
      of the user on whose behalf to run the application.
      The user must be an administrator to have an admin token.
      See https://developer.syncplicity.com/documentation/overview
      for instructions on creating the token.
    -->
    <add key="syncplicityAdminToken" value ="REPLACE_WITH_ADMIN_TOKEN"/>

    <!--
       The REPLACE_OWNER_EMAIL should be set to the email of a Company user.
       This email is used to determine the Privacy Region (ROL) of the Company.
       Therefore, you can use the email of the admin token owner,
       or the email of another user in the company.
       Please enter this email here:
     -->
    <add key="ownerEmail" value="REPLACE_OWNER_EMAIL" />

    <!--
    ###################################
    ##       Content settings        ##
    ###################################

    The following four parameters specify the paths for the Content sample:

      - uploadFileSmall is a small file on local machine for simple upload sample.
          This must be a non-zero length file, readable for the current user.
      - uploadFileLarge is a relatively large file (> 5 Mb) on local machine
          for resumable (chunked) upload sample.
          The file must be readable for the current user.
      - uploadedFileRenamed is path to the local file that has been renamed
      - downloadDirectory is the directory where downloaded files will be stored.
          If the path does not exist, it will be created.      
    
    These settings do not require changes, although you may use other paths for tests.

    If you want to run the APIs taking advantage of the On-Behalf-Of capabilities, then
    you need to also configure the OBO settings section. 
-->
    <add key="uploadFileSmall" value="Resources/SmallFile.txt" />
    <add key="uploadFileLarge" value="Resources/10MB.zip" />
    <add key="uploadedFileRenamed" value="Resources/SmallFileInitialName_renamed.txt" />
    <add key="downloadDirectory" value="Downloads" />    
    
    <!--
    This parameter tagCollection contains a sample json string that is used in the tagging examples and is provided this way in order
    to be easily replaced with another value if desired. The order of the key value pairs is to be preserved as the serialization
    and the service that will handle the request expect it that way.
    -->
    <add key="tagCollection" value="[{'type':'usertag','name':'report'},{'type':'usertag','name':'finance'}]"/>

    <!--
      Put here email of new syncpoint owner (to see sample call for changing owner).
      If no value is set, the changing owner sample will be skipped.
    -->
    <add key="newSyncpointOwnerEmail" value="REPLACE_WITH_NEW_SYNCPOINT_OWNER_EMAIL" />

    <!-- If set to true, a separate authentication token is created and forwarded when communicating with the storage connector. 
         This prevents a rogue storage connector from using the session token the caller provides to make arbitrary API calls on behalf of the user. -->
    <add key="useSecureSessionToken" value="true"/>
    
    <!--
     ###################################
     ##       OBO settings            ##
     ###################################
     
     Enter the email of a user to Impersonate.

     The sample application still authenticates with Syncplicity using the admin token.
     If the parameter is set, however, the application makes API calls impersonating the user account specified here.
     NOTE: the admin token owner must have permissions to access content of other users in order for this sample to work.

     If no value is set, the OBO sample will be skipped.
     -->
    
    <add key="asUserEmail" value="REPLACE_WITH_ONBEHALFOF_USER_EMAIL" />

    <!--
     ###################################
     ##       SVA settings            ##
     ###################################
    
    These values should be initialized for working with SVA storages.
    REPLACE_WITH_STORAGE_TOKEN, REPLACE_WITH_MACHINE_TOKEN, REPLACE_WITH_MACHINE_ID values 
    should be initialized according to Syncplicity API content migration guide

    If you want to run the APIs taking advantage of the On-Behalf-Of capabilities, then
    you need to also configure the OBO settings section. 
-->
    <add key="storageToken" value="REPLACE_WITH_STORAGE_TOKEN" />
    <add key="machineToken" value="REPLACE_WITH_MACHINE_TOKEN" />
    <add key="machineId" value="REPLACE_WITH_MACHINE_ID" />


    <!--
     ###################################
     ##      Search settings          ##
     ###################################
     
     The searchQuery settings specifies the search query for the search sample.
    -->
    <add key="searchQuery" value="test"/>
    
    <!--
     ###################################
     ##     Legal Holds settings      ##
     ###################################
     
     These values should be initialized for working with Legal Hold sample.

     The sample application authenticates with Syncplicity using the eDiscovery administrator token 
     and then data custodian user token:
     - as eDiscovery administrator it looks up for the user and put it on legal hold
     - as data custodian user it creates a content and then delete it
     - as eDiscovery administrator it reads the content on behalf of the user, but also it reads deleted content

     NOTE 1: the eDiscovery administrator must have permissions to access content on behalf of managed users,
     and data custodian user must belong to a group of such users.
     
     NOTE 2: the data custodian user must be an admin to generate application token

     If no values are set, the Legal Holds settings sample will be skipped.
     -->
    
    <add key="eDiscoveryAdminToken" value="REPLACE_WITH_EDISCOVERY_ADMIN_TOKEN" />
    <add key="dataCustodianUserEmail" value="REPLACE_WITH_DATA_CUSTODIAN_USER_EMAIL" />
    <add key="dataCustodianUserToken" value="REPLACE_WITH_DATA_CUSTODIAN_USER_TOKEN" />

  </appSettings>
</configuration>