<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <appSettings>
    <!-- 
     ###################################
     ##           Endpoints           ##
     ###################################
     -->
    <add key="golUrl"  value="https://gol.syncplicity.com"/>

    <!-- 
     ###################################
     ##        OAuth settings         ##
     ###################################

     Create an app from devportal developer.syncplicity.com
     and then use that Key and secret here.
     1. REPLACE_WITH_APP_KEY
     2. REPLACE_WITH_APP_SECRET
     -->
    <add key="appKey" value="REPLACE_WITH_APP_KEY" />
    <add key="appSecret" value="REPLACE_WITH_APP_SECRET" />

    <!--
      Set REPLACE_WITH_ADMIN_TOKEN to the admin token
      of the user on whose behalf to run the application.
      The user must be an administrator to have an admin token.
      See https://developer.syncplicity.com/documentation/overview
      for instructions on creating the token.
    -->
    <add key="syncplicityAdminToken" value ="REPLACE_WITH_ADMIN_TOKEN"/>

    <!--
       The REPLACE_OWNER_EMAIL should be set to the email of a Company user.
       This email is used to determine the Privacy Region (ROL) of the Company.
       Therefore, you can use the email of the admin token owner,
       or the email of another user in the company.
       Please enter this email here:
     -->
    <add key="ownerEmail" value="REPLACE_OWNER_EMAIL" />

    <!--
     ###################################
     ##       Content settings        ##
     ###################################

     Enter the full path on the local hard drive to a file that is readable
     and able to be uploaded.  Ensure there is a non-zero amount bytes
     in the file as 0 length files will not upload properly.
               
     uploadFileSmall is any file that needs to be uploaded.
     uploadFileLarge is a relatively large file (> 5 Mb) for chunk upload example.
     downloadDirectory is any directory where files need to be downloaded.
     REPLACE_WITH_NEW_SYNCPOINT_OWNER_EMAIL - email of the user who should be the real owner 
     of syncpoint. As long as a syncpoint is created under admin account, owner should be changed

    If you want to run the APIs taking advantage of the On-Behalf-Of capabilities, then
    you need to also configure the OBO settings section. 
-->
    <add key="uploadFileSmall" value="Resources/SmallFile.txt" />
    <add key="uploadFileLarge" value="Resources/10MB.zip" />
    <add key="downloadDirectory" value="Downloads" />

    <!-- Put here email of new syncpoint owner (to see sample call for changing owner). If no value will be set - changing owner will be skipped  -->
    <add key="newSyncpointOwnerEmail" value="REPLACE_WITH_NEW_SYNCPOINT_OWNER_EMAIL" />

    <!--
     ###################################
     ##       OBO settings            ##
     ###################################
     
     Enter the email of a user to Impersonate.
     If present, the sample application authenticates with Syncplicity using the admin token.
     After that, the application makes API calls impersonating the user account specified here.
     NOTE: the admin token owner must have permissions to access content of other users in order for this sample to work.
     If no value will be set - OBO sample will be skipped      
     -->
    
    <add key="asUserEmail" value="REPLACE_WITH_ONBEHALFOF_USER_EMAIL" />

    <!--
     ###################################
     ##       SVA settings            ##
     ###################################
    
    These values should be initialized for working with SVA storages.
    REPLACE_WITH_STORAGE_TOKEN, REPLACE_WITH_MACHINE_TOKEN, REPLACE_WITH_MACHINE_ID values 
    should be initialized according to Syncplicity API content migration guide

    If you want to run the APIs taking advantage of the On-Behalf-Of capabilities, then
    you need to also configure the OBO settings section. 
-->
    <add key="storageToken" value="REPLACE_WITH_STORAGE_TOKEN" />
    <add key="machineToken" value="REPLACE_WITH_MACHINE_TOKEN" />
    <add key="machineId" value="REPLACE_WITH_MACHINE_ID" />
    
  </appSettings>
</configuration>